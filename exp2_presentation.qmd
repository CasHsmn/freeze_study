---
title: "pilot_results"
format: revealjs
---

```{r}
#| label: read and initiate libraries
#| include: false
#| echo: false

library(data.table)
library(tidyr)
library(tibble)
library(careless)
library(car)
library(ggplot2)
library(kableExtra)
library(lme4)
library(emmeans)
library(lmerTest)
library(table1)
library(gtsummary)
library(broom)
library(broom.mixed)
library(effectsize)
library(interactions)
library(mediation)
library(WRS2)
library(dplyr)
library(psych)

wd <- list()
wd$data <-"C:/Users/huism080/OneDrive - Wageningen University & Research/Research/Study4/data/"
wd$output <- "C:/Users/huism080/OneDrive - Wageningen University & Research/Research/Study4/output/"

exp1 <- fread(paste0(wd$data, "freeze_exp1_20250714.csv")) # load value data

df <- exp1 %>% 
  filter(Status == 0 & Finished == 1 & att_check == 2) %>% 
  mutate(across(11:ncol(.),as.numeric),
         man_expiry = man_expiry - 5) %>% 
  rowid_to_column(var = "id")

df <- df %>% 
  mutate(expiry = case_when(
    !is.na(shop_today_1) ~ 1,
    !is.na(fr_3_1)       ~ 2,
    !is.na(shop_3_1)     ~ 2,
    !is.na(fr_today_1)   ~ 1,
    TRUE                 ~ NA_real_
  )) %>% 
  mutate(expiry = factor(expiry, levels = 1:2, labels = c("today", "3_days")))


df <- df %>% 
  mutate(location = case_when(
    !is.na(shop_today_1) ~ 1,
    !is.na(fr_3_1)       ~ 2,
    !is.na(shop_3_1)     ~ 1,
    !is.na(fr_today_1)   ~ 2,
    TRUE                 ~ NA_real_
  )) %>% 
  mutate(location = factor(location, levels = 1:2, labels = c("shop", "fridge")))

df <- df %>%
  mutate(
    lik_1 = coalesce(shop_today_1, fr_3_1, shop_3_1, fr_today_1),
    lik_2 = coalesce(shop_today_2, fr_3_2, shop_3_2, fr_today_2),
    lik_3 = coalesce(shop_today_3, fr_3_3, shop_3_3, fr_today_3),
    lik_4 = coalesce(shop_today_4, fr_3_4, shop_3_4, fr_today_4),
    lik_5 = coalesce(shop_today_5, fr_3_5, shop_3_5, fr_today_5),
    st_per_risk = rowMeans(cbind(st_per_risk1_1, st_per_risk2_1), na.rm = TRUE),
    f3_per_risk = rowMeans(cbind(f3_per_risk1_1, f3_per_risk2_1), na.rm = TRUE),
    s3_per_risk = rowMeans(cbind(s3_per_risk1_1, s3_per_risk2_1), na.rm = TRUE),
    ft_per_risk = rowMeans(cbind(ft_per_risk1_1, ft_per_risk2_1), na.rm = TRUE),
    per_risk = coalesce(st_per_risk, f3_per_risk, s3_per_risk, ft_per_risk),
    per_fresh = coalesce(st_per_fresh, f3_per_fresh, s3_per_fresh, ft_per_fresh)
  )
```

# data quality checks
1 respondent failed an attention check. 0 respondents removed for poor data quality.
```{r}
#| label: data quality
#| eval: false
#| include: false
fail_att <- exp1 %>% # failed attention checks
  filter(att_check == 1)

# check intra-rater variability for behaviour questions. Inspect outliers (>1.5*|irv|)
df$irv <- df %>% 
  select(lik_1:lik_5) %>% 
  irv()

Q1 <- quantile(df$irv, 0.25, na.rm = TRUE)
Q3 <- quantile(df$irv, 0.75, na.rm = TRUE)
IQR_val <- Q3 - Q1

lower_bound <- Q1 - 1.5 * IQR_val
upper_bound <- Q3 + 1.5 * IQR_val

df <- df %>%
  mutate(irv_outlier = irv < lower_bound | irv > upper_bound)
outlier_ids <- df$id[outliers]

df$long <- df %>% 
  select(lik_1:lik_5) %>% 
  longstring()
table(df$long) # 0 respondents gave the same answer on all 5 behaviour questions
```

# sample
```{r}
#| label: sample descriptives

```

# Descriptives
```{r}
#| echo: false
# sum_freeze <- df %>%
#   group_by(expiry, location) %>%
#   summarise(
#     n = sum(!is.na(lik_1)),
#     mean = mean(lik_1, na.rm = TRUE),
#     sd = sd(lik_1, na.rm = TRUE),
#     .groups = "drop"
#   )
# 
# # Create bar chart with error bars
# ggplot(sum_freeze, aes(x = expiry, y = mean, fill = location)) +
#   geom_col(position = position_dodge(width = 0.9), width = 0.8) +
#   labs(title = "Mean freezing likelihood by expiry and location",
#        y = "Mean freezing likelihood")
# 
# sum_throw <- df %>%
#   group_by(expiry, location) %>%
#   summarise(
#     n = sum(!is.na(lik_2)),
#     mean = mean(lik_2, na.rm = TRUE),
#     sd = sd(lik_2, na.rm = TRUE),
#     .groups = "drop"
#   )
# 
# # Create bar chart with error bars
# ggplot(sum_throw, aes(x = expiry, y = mean, fill = location)) +
#   geom_col(position = position_dodge(width = 0.9), width = 0.8) +
#   labs(title = "Mean discarding likelihood by expiry and location",
#        y = "Mean discarding likelihood")

# all behaviour likelihoods
facet_labels <- c(
  lik_1 = "Freezing",
  lik_2 = "Discarding",
  lik_3 = "Cooking",
  lik_4 = "Fridge",
  lik_5 = "Share"
)

df %>% 
  select(starts_with("lik_")) %>% 
  cor() %>% 
  kable(digits = 2)

long_lik <- df %>%
  pivot_longer(
    cols = starts_with("lik_"),
    names_to = "lik_item",
    values_to = "score"
  )

lik_summary <- long_lik %>%
  group_by(expiry, location, lik_item) %>%
  summarise(
    n = sum(!is.na(score)),
    mean = mean(score, na.rm = TRUE),
    sd = sd(score, na.rm = TRUE),
    .groups = "drop"
  )
lik_summary %>%
  arrange(lik_item, expiry, location) %>%
  kable(format = "html", caption = "Means and SDs for Each Condition") %>%
  kable_styling(full_width = FALSE, bootstrap_options = c("striped", "hover"))

ggplot(lik_summary, aes(x = expiry, y = mean, fill = location)) +
  geom_col(position = position_dodge(width = 0.9), width = 0.8) +
  facet_wrap(~ lik_item, ncol = 3, labeller = as_labeller(facet_labels))+
  geom_errorbar(
    aes(ymin = mean-sd, ymax = mean+sd),
    position = position_dodge(width = 0.9),
    width = 0.2,
    linewidth = 0.6
  )



# ggsave(paste0(wd$output, "beh_int_summary.png"), width = 10, height = 7)
```

# Manipulation check
People do agree more strongly with the statement that the beef is close to expiry for beef expiring today than in 3 days, though the mean difference is only small. They also find the beef expiring in 3 days to be expiring soon.

That is interesting because I don't think use by dates really go any longer than 3 days for ground beef.

For the purchase date manipulation check, people mostly correctly indicate when the beef was purchased.
```{r}
t.test(man_expiry ~ expiry, data = df)

table(df$man_purchase, df$location)
chisq.test(table(df$man_purchase, df$location))
```

# Analysis
```{r}
#| label: anova

# Freezing likelihood
options(contrasts = c("contr.sum", "contr.poly"))
aov <- aov(lik_1 ~ location*expiry, data = df)
kable(Anova(aov, type = 3))

# check assumptions
qqnorm(residuals(aov));qqline(residuals(aov)) #non-normal
leveneTest(aov) # homoscedasticity violated

# robust regression, trimmed means (20%)
t2way(lik_1 ~ location*expiry, data = df)

# post-hoc
emm <- emmeans(aov, ~ location * expiry)
kable(pairs(emm, adjust = "bonferroni"))

ggplot(as.data.frame(emm), aes(x = expiry, y = emmean, group = location, color = location)) +
  geom_line(linewidth = 1) +
  geom_point(size = 3) +
  geom_errorbar(
    aes(ymin = emmean - SE, ymax = emmean + SE),
    width = 0.15
  ) +
  ylim(5,7)

# Discarding likelihood
aov_dis <- aov(lik_2 ~ location*expiry, data = df)
kable(Anova(aov_dis, type = 3))

# assumptions
qqnorm(residuals(aov_dis));qqline(residuals(aov_dis)) #non-normal
leveneTest(aov_dis) # homoscedasticity violated

# robust regression, trimmed means (20%)
t2way(lik_2 ~ location*expiry, data = df)

# post-hoc
emm_throw <- emmeans(aov_dis, ~ location * expiry)
kable(pairs(emm_throw, adjust = "bonferroni"))

ggplot(as.data.frame(emm_throw), aes(x = expiry, y = emmean, group = location, color = location)) +
  geom_line(linewidth = 1) +
  geom_point(size = 3) +
  geom_errorbar(
    aes(ymin = emmean - SE, ymax = emmean + SE),
    width = 0.15
  ) +
  ylim(1,3)
```

# remove failed manipulation check
```{r}
sub_man <- df %>%
  filter((location == "shop" & man_purchase == 1) |
         (location == "fridge" & man_purchase == 2))

table(sub_man$man_purchase, sub_man$location)

subaov <- aov(lik_1 ~ location*expiry, data = sub_man)
Anova(subaov, type = "3")
```
# Mediation
This works for expiry, which is nice but not so exciting, but not for location.
```{r}
#| label: mediation

# descriptives
ggplot(df, aes(x = location, y = per_risk, fill = expiry)) +
  stat_summary(fun = mean, geom = "bar", position = position_dodge(width = 1)) +
  stat_summary(fun.data = mean_se, geom = "errorbar",
               position = position_dodge(width = 1), width = 0.2) +
  labs(title = "Perceived Risk by Location and Expiry",
       x = "Storage Location", y = "Perceived Risk") +
  theme_minimal()

ggplot(df, aes(x = location, y = per_fresh, fill = expiry)) +
  stat_summary(fun = mean, geom = "bar", position = position_dodge(width = 1)) +
  stat_summary(fun.data = mean_se, geom = "errorbar",
               position = position_dodge(width = 1), width = 0.2) +
  labs(title = "Perceived Freshness by Location and Expiry",
       x = "Storage Location", y = "Perceived Freshness") +
  theme_minimal()

# path a
risk_path <- aov(per_risk ~ location*expiry, data = df)
kable(Anova(risk_path, type = "3"))

fresh_path <- aov(per_fresh ~ location*expiry, data = df)
kable(Anova(fresh_path, type = "3"))

# path b
risk_freeze <- lm(lik_1 ~ per_risk, data = df)
kable(tidy(risk_freeze))
fresh_freeze <- lm(lik_1 ~ per_fresh, data = df)
kable(tidy(fresh_freeze))

# mediation
med_risk <- lm(per_risk ~ location + expiry, data = df)
kable(tidy(med_risk))
out_risk <- lm(lik_1 ~ location + expiry + per_risk, data = df)
kable(tidy(out_risk))
med_risk_result <- mediation::mediate(med_risk, out_risk,
                      treat = "location", mediator = "per_risk",
                      boot = TRUE, sims = 1000)
summary(med_risk_result)


```

```{r}
# path a
risk_path <- aov(per_risk ~ location*expiry, data = df)
kable(Anova(risk_path, type = "3"))

fresh_path <- aov(per_fresh ~ location*expiry, data = df)
kable(Anova(fresh_path, type = "3"))

# path b
risk_disc <- lm(lik_2 ~ per_risk, data = df)
kable(tidy(risk_disc))
fresh_disc <- lm(lik_2 ~ per_fresh, data = df)
kable(tidy(fresh_disc))

# mediation
med_risk_disc <- lm(per_risk ~ location + expiry, data = df)
kable(tidy(med_risk_disc))
out_risk_disc <- lm(lik_2 ~ location + expiry + per_risk, data = df)
kable(tidy(out_risk_disc))
med_risk_disc_result <- mediation::mediate(med_risk_disc, out_risk_disc,
                      treat = "location", mediator = "per_risk",
                      boot = TRUE, sims = 1000)
summary(med_risk_disc_result)
```





